// <auto-generated />
using System;
using Forecast.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Forecast.Migrations.Migrations
{
    [DbContext(typeof(ForecastInformationDataBaseContext))]
    partial class ForecastInformationDataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Forecast.Model.Entity.ForecastInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DefaultTemperatureSymbol")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.Property<double>("DryBulb")
                        .HasColumnType("double");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ForecastDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("MaximumTemperature")
                        .HasColumnType("double");

                    b.Property<double>("MinimumTemperature")
                        .HasColumnType("double");

                    b.Property<double>("Pressure")
                        .HasColumnType("double");

                    b.Property<double>("RelativeHumidity")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("WetBulb")
                        .HasColumnType("double");

                    b.Property<double>("Wind")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("ForecastInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
